{
  "address": "0x91297F061fB591930065033B86bc3EDb4B7B70e1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe90d51e7ad5a55edf03f32dbb368e55abb28210bd0119c59edae78b3284b0ff0",
  "receipt": {
    "to": null,
    "from": "0xC58167A53672f799B1CC6F2453FD71CA1972D8Ae",
    "contractAddress": "0x91297F061fB591930065033B86bc3EDb4B7B70e1",
    "transactionIndex": 34,
    "gasUsed": "801916",
    "logsBloom": "0x
    "blockHash": "0x7aad68e70ee53e732e0d6c273baea74a30483b027717fd3977ed8a5b6e493948",
    "transactionHash": "0xe90d51e7ad5a55edf03f32dbb368e55abb28210bd0119c59edae78b3284b0ff0",
    "logs": [],
    "blockNumber": 3944439,
    "cumulativeGasUsed": "3665748",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "e93b47b0c6fea3543838d6b954584620",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface priceFeed;\\n    constructor( address priceFeedAddress) {\\n        priceFeed=AggregatorV3Interface (priceFeedAddress);\\n        i_owner = msg.sender;\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\",\"keccak256\":\"0x93b111824cd8d70350b91348b87d882ac13441fa367b35fd3cfe38b85f1dc61b\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x08cd043af6fb2dc9c1174c692908550daee96fb0783644da2622517e80522fda\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610e0d380380610e0d8339818101604052810190610032919061011d565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610cb4806101596000396000f3fe6080604052600436106100595760003560e01c80633ccfd60b146100725780633e47d6f3146100895780636b69a592146100c6578063b60d4288146100f1578063dba6335f146100fb578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061008761029d565b005b34801561009557600080fd5b506100b060048036038101906100ab9190610740565b6104df565b6040516100bd9190610786565b60405180910390f35b3480156100d257600080fd5b506100db6104f7565b6040516100e89190610786565b60405180910390f35b6100f9610163565b005b34801561010757600080fd5b50610110610504565b60405161011d91906107b0565b60405180910390f35b34801561013257600080fd5b5061014d600480360381019061014891906107f7565b61052a565b60405161015a91906107b0565b60405180910390f35b6802b5e3af16b18800006101a2600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056990919063ffffffff16565b10156101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da90610881565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461023191906108d0565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610324576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103cf5760006001828154811061034a57610349610904565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103c790610933565b915050610327565b50600067ffffffffffffffff8111156103eb576103ea61097b565b5b6040519080825280602002602001820160405280156104195781602001602082028036833780820191505090505b506001908051906020019061042f929190610636565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610456906109db565b60006040518083038185875af1925050503d8060008114610493576040519150601f19603f3d011682016040523d82523d6000602084013e610498565b606091505b50509050806104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610a3c565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061053a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610575836105a5565b90506000670de0b6b3a7640000858361058e9190610a5c565b6105989190610acd565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106179190610b8b565b5050509150506402540be4008161062e9190610c06565b915050919050565b8280548282559060005260206000209081019282156106af579160200282015b828111156106ae5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610656565b5b5090506106bc91906106c0565b5090565b5b808211156106d95760008160009055506001016106c1565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061070d826106e2565b9050919050565b61071d81610702565b811461072857600080fd5b50565b60008135905061073a81610714565b92915050565b600060208284031215610756576107556106dd565b5b60006107648482850161072b565b91505092915050565b6000819050919050565b6107808161076d565b82525050565b600060208201905061079b6000830184610777565b92915050565b6107aa81610702565b82525050565b60006020820190506107c560008301846107a1565b92915050565b6107d48161076d565b81146107df57600080fd5b50565b6000813590506107f1816107cb565b92915050565b60006020828403121561080d5761080c6106dd565b5b600061081b848285016107e2565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061086b601b83610824565b915061087682610835565b602082019050919050565b6000602082019050818103600083015261089a8161085e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108db8261076d565b91506108e68361076d565b92508282019050808211156108fe576108fd6108a1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061093e8261076d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109705761096f6108a1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109c56000836109aa565b91506109d0826109b5565b600082019050919050565b60006109e6826109b8565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a26600b83610824565b9150610a31826109f0565b602082019050919050565b60006020820190508181036000830152610a5581610a19565b9050919050565b6000610a678261076d565b9150610a728361076d565b9250828202610a808161076d565b91508282048414831517610a9757610a966108a1565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ad88261076d565b9150610ae38361076d565b925082610af357610af2610a9e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b1d81610afe565b8114610b2857600080fd5b50565b600081519050610b3a81610b14565b92915050565b6000819050919050565b610b5381610b40565b8114610b5e57600080fd5b50565b600081519050610b7081610b4a565b92915050565b600081519050610b85816107cb565b92915050565b600080600080600060a08688031215610ba757610ba66106dd565b5b6000610bb588828901610b2b565b9550506020610bc688828901610b61565b9450506040610bd788828901610b76565b9350506060610be888828901610b76565b9250506080610bf988828901610b2b565b9150509295509295909350565b6000610c1182610b40565b9150610c1c83610b40565b9250828202610c2a81610b40565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610c6257610c616108a1565b5b8282058414831517610c7757610c766108a1565b5b509291505056fea26469706673582212200771cd2ae4053fc7304d781d8d2beca4ab99747efc4430c00022da35296eb59264736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80633ccfd60b146100725780633e47d6f3146100895780636b69a592146100c6578063b60d4288146100f1578063dba6335f146100fb578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061008761029d565b005b34801561009557600080fd5b506100b060048036038101906100ab9190610740565b6104df565b6040516100bd9190610786565b60405180910390f35b3480156100d257600080fd5b506100db6104f7565b6040516100e89190610786565b60405180910390f35b6100f9610163565b005b34801561010757600080fd5b50610110610504565b60405161011d91906107b0565b60405180910390f35b34801561013257600080fd5b5061014d600480360381019061014891906107f7565b61052a565b60405161015a91906107b0565b60405180910390f35b6802b5e3af16b18800006101a2600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056990919063ffffffff16565b10156101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da90610881565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461023191906108d0565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610324576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103cf5760006001828154811061034a57610349610904565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103c790610933565b915050610327565b50600067ffffffffffffffff8111156103eb576103ea61097b565b5b6040519080825280602002602001820160405280156104195781602001602082028036833780820191505090505b506001908051906020019061042f929190610636565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610456906109db565b60006040518083038185875af1925050503d8060008114610493576040519150601f19603f3d011682016040523d82523d6000602084013e610498565b606091505b50509050806104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610a3c565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061053a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610575836105a5565b90506000670de0b6b3a7640000858361058e9190610a5c565b6105989190610acd565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106179190610b8b565b5050509150506402540be4008161062e9190610c06565b915050919050565b8280548282559060005260206000209081019282156106af579160200282015b828111156106ae5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610656565b5b5090506106bc91906106c0565b5090565b5b808211156106d95760008160009055506001016106c1565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061070d826106e2565b9050919050565b61071d81610702565b811461072857600080fd5b50565b60008135905061073a81610714565b92915050565b600060208284031215610756576107556106dd565b5b60006107648482850161072b565b91505092915050565b6000819050919050565b6107808161076d565b82525050565b600060208201905061079b6000830184610777565b92915050565b6107aa81610702565b82525050565b60006020820190506107c560008301846107a1565b92915050565b6107d48161076d565b81146107df57600080fd5b50565b6000813590506107f1816107cb565b92915050565b60006020828403121561080d5761080c6106dd565b5b600061081b848285016107e2565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061086b601b83610824565b915061087682610835565b602082019050919050565b6000602082019050818103600083015261089a8161085e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108db8261076d565b91506108e68361076d565b92508282019050808211156108fe576108fd6108a1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061093e8261076d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109705761096f6108a1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109c56000836109aa565b91506109d0826109b5565b600082019050919050565b60006109e6826109b8565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a26600b83610824565b9150610a31826109f0565b602082019050919050565b60006020820190508181036000830152610a5581610a19565b9050919050565b6000610a678261076d565b9150610a728361076d565b9250828202610a808161076d565b91508282048414831517610a9757610a966108a1565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ad88261076d565b9150610ae38361076d565b925082610af357610af2610a9e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b1d81610afe565b8114610b2857600080fd5b50565b600081519050610b3a81610b14565b92915050565b6000819050919050565b610b5381610b40565b8114610b5e57600080fd5b50565b600081519050610b7081610b4a565b92915050565b600081519050610b85816107cb565b92915050565b600080600080600060a08688031215610ba757610ba66106dd565b5b6000610bb588828901610b2b565b9550506020610bc688828901610b61565b9450506040610bd788828901610b76565b9350506060610be888828901610b76565b9250506080610bf988828901610b2b565b9150509295509295909350565b6000610c1182610b40565b9150610c1c83610b40565b9250828202610c2a81610b40565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610c6257610c616108a1565b5b8282058414831517610c7757610c766108a1565b5b509291505056fea26469706673582212200771cd2ae4053fc7304d781d8d2beca4ab99747efc4430c00022da35296eb59264736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}